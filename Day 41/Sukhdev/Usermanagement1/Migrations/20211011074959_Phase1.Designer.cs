// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Usermanagement1.Repository;

namespace Usermanagement1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211011074959_Phase1")]
    partial class Phase1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Usermanagement1.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<DateTime>("modifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 123,
                            AddedDate = new DateTime(2021, 10, 11, 7, 49, 59, 484, DateTimeKind.Utc).AddTicks(1519),
                            Email = "sandeep@gmail.com",
                            IPAddress = "56678",
                            Password = "test123",
                            UserName = "sandeep",
                            modifyDate = new DateTime(2021, 10, 11, 7, 49, 59, 484, DateTimeKind.Utc).AddTicks(2395)
                        },
                        new
                        {
                            Id = 163,
                            AddedDate = new DateTime(2021, 10, 11, 7, 49, 59, 485, DateTimeKind.Utc).AddTicks(5374),
                            Email = "sandeep23@gmail.com",
                            IPAddress = "56678",
                            Password = "test789",
                            UserName = "sandeep karan",
                            modifyDate = new DateTime(2021, 10, 11, 7, 49, 59, 485, DateTimeKind.Utc).AddTicks(5379)
                        });
                });

            modelBuilder.Entity("Usermanagement1.Domain.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("modifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Usermanagement1.Domain.UserProfile", b =>
                {
                    b.HasOne("Usermanagement1.Domain.User", "user")
                        .WithOne("userProfile")
                        .HasForeignKey("Usermanagement1.Domain.UserProfile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Usermanagement1.Domain.User", b =>
                {
                    b.Navigation("userProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
